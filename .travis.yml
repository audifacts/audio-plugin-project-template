language: cpp
sudo: false

matrix:
  include:
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'ppa:webkit-team/ppa'
        packages:
          - g++-6
          - libasound2-dev
          - libxrandr-dev
          - libxinerama-dev
          - libx11-dev
          - mesa-common-dev
          - freeglut3-dev
          - libxcomposite-dev
          - libfreetype6-dev
          - libcurl4-gnutls-dev
          - libxcursor-dev
          - libgtk-3-dev
          - libwebkit2gtk-4.0-dev
    env: CXX_COMPILER='g++-6' C_COMPILER='gcc-6' Fortran_COMPILER='gfortran' BUILD_TYPE='Debug'
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'ppa:webkit-team/ppa'
        packages:
          - g++-6
          - libasound2-dev
          - libxrandr-dev
          - libxinerama-dev
          - libx11-dev
          - mesa-common-dev
          - freeglut3-dev
          - libxcomposite-dev
          - libfreetype6-dev
          - libcurl4-gnutls-dev
          - libxcursor-dev
          - libgtk-3-dev
          - libwebkit2gtk-4.0-dev
    env: CXX_COMPILER='g++-6' C_COMPILER='gcc-6' Fortran_COMPILER='gfortran' BUILD_TYPE='Release'
  - os: osx
    compiler: clang
    env: CXX_COMPILER='clang++' C_COMPILER='clang' Fortran_COMPILER='gfortran' GENERATOR='-G Xcode' BUILD_TYPE='Debug'
  - os: osx
    compiler: clang
    env: CXX_COMPILER='clang++' C_COMPILER='clang' Fortran_COMPILER='gfortran' GENERATOR='-G Xcode' BUILD_TYPE='Release'
      PROJECT_DEPLOY_TARGET="osx"
install:
- DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
- mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
before_script:
- export CXX=${CXX_COMPILER}
- export CC=${C_COMPILER}
- export FC=${Fortran_COMPILER}
- export PATH=$HOME/.local/bin:/usr/local/bin:/usr/bin:$PATH
script:
- cd ${TRAVIS_BUILD_DIR}
- mkdir build
- cd build
- CXX=${CXX_COMPILER} CC=${C_COMPILER} FC=${Fortran_COMPILER} cmake $GENERATOR .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_OSX_ARCHITECTURES="i386;x86_64"
- cd ..
- cmake --build build --config $BUILD_TYPE
after_success:
- |
  if [ -n "${PROJECT_DEPLOY_TARGET+set}" ]; then
    echo "Deploying package $PROJECT_DEPLOY_TARGET"
    mkdir build/$PROJECT_DEPLOY_TARGET
    mkdir build/deploy
    cp -r build/$BUILD_TYPE/*.vst build/$PROJECT_DEPLOY_TARGET/.
    cp -r build/$BUILD_TYPE/*.vst3 build/$PROJECT_DEPLOY_TARGET/.
    cp -r build/$BUILD_TYPE/*.component build/$PROJECT_DEPLOY_TARGET/.
    cd build
    zip -r ${PROJECT_DEPLOY_TARGET}.zip $PROJECT_DEPLOY_TARGET
    mv ${PROJECT_DEPLOY_TARGET}.zip deploy
    cd ..
  fi
before_deploy:
- export FILE_TO_UPLOAD=$(ls build/deploy/*.zip)
deploy:
  provider: releases
  api_key:
    secure: LH4bWTZxXA0HFJoHgjagTVdG6zu6+Xtwaui1kVljgcbVWZUQSVJlFtPvTTT9h6Ae0lq+qlpb33leOOY+qssWPTs5nn2Kmz/RcK42wNCLnyiMf9QSg5zQXce1Yhuqr0CPppGKfqKE/Pl3wI+J4o5QrMWkWKAsQaNlotVQE5wo4vN2Z4mYgMMrID6Xwz2TUM6LN7fBgFre7fjlImvB1F7sXc8CM2tu0rdQeqPhuPj+rlR98RZu4pWL50MYAwamhqvFOmaNXC+QAR+VSzSdtH5k6Ez9lTkN8gFjNVm4dLqomO2O7Lb1dL2qiAQXNhsr94FWrHWMBcXxrYBTvWzYWYaGcysNDwRla3WTg8IB//uzl37j/p7o8+YmPH6Frq7R3skLx3PQrYC5VpmG7qpSDNPFn8b9PMWekSivjY+uj8EmOso9X42Ev6M1iIakgkYUAwL7L9KpG/avnR1zrjH2dZKT8A4PPsaYvhffaaD/bjP6UGekSHQxTeiamIcsCBRfp6r76eQnVYdwVTxFlHKb2BjfPB6AZvVpkAKsVBu+igScJwMsBEEcWVGUZ+mxKEMM4mJpwhrSE5qZL688EPLlooJy64vnkSLuE2sT2avW02OVfBgYXVnOmSTj3HF1Cexig3CwnemdrqKAZ0+lxUjySysfxkk4WMi9uQG3i31rct1/q/Y=
  file_glob: true
  file: ${FILE_TO_UPLOAD}
  skip_cleanup: true
  overwrite: true
  on:
    branch: master
    condition: -n "${PROJECT_DEPLOY_TARGET+set}"
    tags: true
